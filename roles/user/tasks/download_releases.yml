  - block:
    - name: 'Download latest release of {{ item }}'
      uri:                                                               
        url: 'https://api.github.com/repos/{{ item }}/releases/latest'
        return_content: true                                             
      register: json_reponse

    - pause:
        prompt: |-
          Select files to download (1,2,...) or press enter to skip:
          ==========================
          {% for file in json_reponse.json.assets %}
          {{ loop.index }}: {{ file.name }}
          {% endfor %}
      register: out
    
    - set_fact:
        index_list: "{{ out.user_input.split(',')|difference([''])|map('int')|list|sort }}"

    # - name: 'Create directory for {{ item.split("/")[1] }}'
    #   file:
    #     path: "{{ ansible_env.HOME }}/executables/{{ item.split('/')[1] }}"
    #     state: directory
    #   register: dir
    #   when: index_list|length > 1

    - set_fact:
        dir:
          path: "{{ ansible_env.HOME }}/.local/bin"
      # when: index_list|length == 1

    - get_url:                                                           
        url: "{{ json_reponse.json.assets[selection| int -1].browser_download_url }}"                       
        dest: "{{ dir.path }}/{{ json_reponse.json.assets[selection| int -1].name }}"
        mode: 0755
      loop: "{{ index_list }}"
      loop_control:
        loop_var: selection
      when: index_list|length > 0
      ignore_errors: true

    - name: Extract and delete downloaded files
      ansible.builtin.script: "files/extract.py {{ dir.path }}/{{ json_reponse.json.assets[selection| int -1].name }} {{ dir.path }}"
      args:
        executable: "/usr/bin/python3"
      loop: "{{ index_list }}"
      loop_control:
        loop_var: selection
      ignore_errors: true

    rescue:
      - debug:
          msg: "Failed to download {{ item }}"